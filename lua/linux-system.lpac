-- TEST.LUA File

--package.path="lua/?.lua;lua/base/?.lua;lua/toolchain/?.lua"
package.path="lua/?.lua"

require "inc/env"
--print("Hello from LUA\n\n")

lpacs = {
	--"base/m4",
	"base/busybox", 
	--"base/ncurses",
	--"base/bash",
	--"base/coreutils",
	--"base/xz",
}

src_dir="/mnt/sda5/PROJECTS/os/plaxOS/src"
tol_dir="/tmp/cbuild"

env_global = {
	--"PATH="..tol_dir.."/x86_64-multilib-linux-gnu/bin/:"..tol_dir.."/tools/bin:$PATH",
	"LFS_TGT=$(uname -m)-lfs-linux-gnu",
	"VENDOR=GIWIG",
}


--print(package.path.."\n\n")

--[[
for k = 1,#mpac do
	local modname = mpac[k]
	print( "Module == "..modname )

	if pcall(require, modname) then
		print(pkgname)
		if _G['pkg_download'] then
			print("=========================================")
			pkg_download()
			pkg_download = nil
		else
			--print("\tbuild()\t\t->\tnot defined")
		end

		if _G['pkg_extract'] then
			print("=========================================")
			pkg_extract()
			pkg_extract = nil
		else
			--print("\tbuild()\t\t->\tnot defined")
		end

		if _G['pkg_prepare'] then
			print("=========================================")
			pkg_prepare()
			pkg_prepare = nil
		else
			--print("\tprepare()\t->\tnot defined")
		end
		
		if _G['pkg_build'] then
			print("=========================================")
			pkg_build()
			pkg_build = nil
		else
			--print("\tbuild()\t\t->\tnot defined")
		end
		
		if _G['pkg_package'] then
			print("=========================================")
			pkg_package()
			pkg_package = nil
		else
			--print("\tbuild()\t\t->\tnot defined")
		end
		
	end
	print("\n\n")
end


]]--


--[[

require "busybox"


--test(ttt)

--test2("ps -A")


sha256file("lua/test.lua")
--test2("sha256sum second.lua")

--sha256file("test.lua")
--test2("sha256sum test.lua")

--sha256file("mini-pacman")
--test2("sha256sum mini-pacman")
--test2("ps -A")

--test2("ls -la")
--ls(".")

bash("mkdir -pv /tmp/cbuild")
bash("mkdir -pv /tmp/cbuild/test_dir")
chroot("/tmp/cbuild")

--test2("uname -r")
files = ls("/")
for k = 1, #files do
	--if files[k] ~= "." and files[k] ~= ".." then 
		print("\t"..files[k])
	--end
end

-- test2("ps -A")
print("\n\n\n")
print("\tLUA: Current dir is == " .. pwd())
print("\t\t*** hello ****")
print("\n\n\n")


--print(package.path)

print(pkgname)
print(pkgver)

for sourceCount = 1, #source do
	print(source[sourceCount])
end

]]--


